<?xml version="1.0" encoding="utf-8"?>
<mx:Application 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:control="org.akinu.control.*"
	xmlns:view="org.akinu.view.*"
	xmlns:bridge="bridge.*" 
	xmlns:genvis="genvis.*" 
	xmlns:business="org.akinu.business.*"
	layout="absolute" width="100%" height="100%" 
 	applicationComplete="init()" keyDown="keyHandler(event)">
   <bridge:FABridge bridgeName="flex" /> 
   	<mx:Style source="./org/akinu/style/style.css"/>
   <mx:Script>
		<![CDATA[
			import org.akinu.events.InitializeEvent;
			import org.akinu.commands.InitializeCommand;
			import flare.display.DirtySprite;
			import mx.rpc.AsyncToken;
			import genvis.data.Person;
			import mx.controls.Alert;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import org.akinu.model.ModelLocator;
			
			[Bindable]
			private var model:ModelLocator = ModelLocator.getInstance();
			
			private function init():void{
				//Application.application.stage.addEventListener(FullScreenEvent.FULL_SCREEN, fullScreenHandler);
				//Application.application.stage.displayState = StageDisplayState.FULL_SCREEN;
				
//				var initializeEvent:InitializeEvent = new  InitializeEvent("1", vis);
//				initializeEvent.dispatch();			
			}
	         private function fullScreenHandler(evt:FullScreenEvent):void {
                
                if (evt.fullScreen) {
                    /* Do something specific here if we switched to full screen mode. */
                } else {
                    /* Do something specific here if we switched to normal mode. */
                }
            }
            private function keyHandler(event:KeyboardEvent):void{
            	if (event.ctrlKey && event.charCode==102){//control + f
            		toggleFullScreen();
            	}
            }
            private function toggleFullScreen():void {
                try {
                    switch (Application.application.stage.displayState) {
                        case StageDisplayState.FULL_SCREEN:                           
                            Application.application.stage.displayState = StageDisplayState.NORMAL;
                            break;
                        default:                            
                            Application.application.stage.displayState = StageDisplayState.FULL_SCREEN;
                            break;
                    }
                } catch (err:SecurityError) {
                    // ignore
                }
            }



//			private function resultHandler(e:ResultEvent):void {
//				var str:String = "asdfawrfh239urF iwiuHF289UJ FU 4f4";				
//				trace(str.split(" ", 2));		
//				if (e.result is Profile)
//					trace(true);
//				else 
//					trace(false);		    
//			    var root:Person = new Person();
//			    root.name = e.result.first_name+" "+e.result.last_name;
//			    root.gender = e.result.sex;
//			    root.date_of_birth = e.result.date_of_birth;
//			    root.date_of_death = e.result.date_of_death;
//			    root.id = e.result.id;
//			    Alert.show(root.gender);
//			    vis.visualize(e.result as Person);
//			    DirtySprite.renderDirty();    
//			    	    		    
//			}
//			private function serviceFault(fe:FaultEvent):void {			    
//			    Alert.show("An error occurred: " + fe.fault.faultString);
//			}
//	
			public function setRoot(rootID:String):void{
				if (rootID!=""){
					var initializeEvent:InitializeEvent = new InitializeEvent(rootID, vis);
					initializeEvent.dispatch();
				}
			}
			private function changeHandler():void{
				if (model.page == ModelLocator.PERSON_PAGE){
					personPage.init();
				}
			}
			
		]]>
	</mx:Script>
	<!--Cairngorm front controller and remote services-->
   	<control:AkinuController id="controller"/>
   	<business:Services id="services"/>
	<!--<mx:RemoteObject
	  id="srv"
	  destination="rubyamf"
	  source="ProfileController"	  
	  fault="serviceFault(event)"
	  showBusyCursor="true">
	  <mx:method name="root" result="resultHandler(event)"/>
	</mx:RemoteObject>-->
	<!--<mx:Button label="send" buttonDown="setRoot(1);"></mx:Button>-->	
	<mx:VBox width="100%" height="100%">
		<view:ProjectPage height="20" width="100%"/>
		<mx:HBox width="100%" height="100%">
			<genvis:GenVis id="vis" width="100%" height="100%" backgroundColor="#FFFFFF" tabEnabled="false" tabIndex="-1"/>
			<mx:ViewStack id="mainStack" maxWidth="350"  minWidth="350" height="100%" selectedIndex="{model.page}" change="changeHandler()" creationPolicy="all">
				<view:FrontPage/>
				<view:PersonPage id="personPage"/>				
			</mx:ViewStack>
		</mx:HBox>
	</mx:VBox>
</mx:Application>
